;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 8/4/2024 12:24:15 AM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2968      	GOTO       360
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00C1      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00C2      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
0x000B	0x0870      	MOVF       R0, 0
0x000C	0x00A3      	MOVWF      35
0x000D	0x087B      	MOVF       R11, 0
0x000E	0x00A2      	MOVWF      34
0x000F	0x087C      	MOVF       R12, 0
0x0010	0x00A1      	MOVWF      33
0x0011	0x087D      	MOVF       R13, 0
0x0012	0x00A0      	MOVWF      32
;traffic_light.c,25 :: 		void interrupt(){
;traffic_light.c,26 :: 		Delay_ms(500); //delaying to avoid distrbution of instructions
0x0013	0x3006      	MOVLW      6
0x0014	0x00FB      	MOVWF      R11
0x0015	0x3013      	MOVLW      19
0x0016	0x00FC      	MOVWF      R12
0x0017	0x30AD      	MOVLW      173
0x0018	0x00FD      	MOVWF      R13
L_interrupt0:
0x0019	0x0BFD      	DECFSZ     R13, 1
0x001A	0x2819      	GOTO       L_interrupt0
0x001B	0x0BFC      	DECFSZ     R12, 1
0x001C	0x2819      	GOTO       L_interrupt0
0x001D	0x0BFB      	DECFSZ     R11, 1
0x001E	0x2819      	GOTO       L_interrupt0
0x001F	0x0000      	NOP
0x0020	0x0000      	NOP
;traffic_light.c,27 :: 		while(INTF_bit){
L_interrupt1:
0x0021	0x1C8B      	BTFSS      INTF_bit, BitPos(INTF_bit+0)
0x0022	0x2888      	GOTO       L_interrupt2
;traffic_light.c,28 :: 		if(portB.B0==1){INTF_bit=0;} //break from interrupt once button is pressed
0x0023	0x1C06      	BTFSS      PORTB, 0
0x0024	0x2826      	GOTO       L_interrupt3
0x0025	0x108B      	BCF        INTF_bit, BitPos(INTF_bit+0)
L_interrupt3:
;traffic_light.c,29 :: 		if(portB.B1==1) {
0x0026	0x1C86      	BTFSS      PORTB, 1
0x0027	0x2887      	GOTO       L_interrupt4
;traffic_light.c,30 :: 		s_yellow = 1; w_yellow= 1;
0x0028	0x1488      	BSF        PORTD, 1
0x0029	0x1608      	BSF        PORTD, 4
;traffic_light.c,31 :: 		s_red = 0;  s_green = 0; w_red = 0; w_green = 0;
0x002A	0x1008      	BCF        PORTD, 0
0x002B	0x1108      	BCF        PORTD, 2
0x002C	0x1188      	BCF        PORTD, 3
0x002D	0x1288      	BCF        PORTD, 5
;traffic_light.c,33 :: 		portC = (3<<4) |(0&0x0f);      Delay_ms(1000);
0x002E	0x3030      	MOVLW      48
0x002F	0x0087      	MOVWF      PORTC
0x0030	0x300B      	MOVLW      11
0x0031	0x00FB      	MOVWF      R11
0x0032	0x3026      	MOVLW      38
0x0033	0x00FC      	MOVWF      R12
0x0034	0x305D      	MOVLW      93
0x0035	0x00FD      	MOVWF      R13
L_interrupt5:
0x0036	0x0BFD      	DECFSZ     R13, 1
0x0037	0x2836      	GOTO       L_interrupt5
0x0038	0x0BFC      	DECFSZ     R12, 1
0x0039	0x2836      	GOTO       L_interrupt5
0x003A	0x0BFB      	DECFSZ     R11, 1
0x003B	0x2836      	GOTO       L_interrupt5
0x003C	0x0000      	NOP
0x003D	0x0000      	NOP
;traffic_light.c,34 :: 		portC = (2<<4) |(0&0x0f);      Delay_ms(1000);
0x003E	0x3020      	MOVLW      32
0x003F	0x0087      	MOVWF      PORTC
0x0040	0x300B      	MOVLW      11
0x0041	0x00FB      	MOVWF      R11
0x0042	0x3026      	MOVLW      38
0x0043	0x00FC      	MOVWF      R12
0x0044	0x305D      	MOVLW      93
0x0045	0x00FD      	MOVWF      R13
L_interrupt6:
0x0046	0x0BFD      	DECFSZ     R13, 1
0x0047	0x2846      	GOTO       L_interrupt6
0x0048	0x0BFC      	DECFSZ     R12, 1
0x0049	0x2846      	GOTO       L_interrupt6
0x004A	0x0BFB      	DECFSZ     R11, 1
0x004B	0x2846      	GOTO       L_interrupt6
0x004C	0x0000      	NOP
0x004D	0x0000      	NOP
;traffic_light.c,35 :: 		portC = (1<<4) |(0&0x0f);      Delay_ms(1000);
0x004E	0x3010      	MOVLW      16
0x004F	0x0087      	MOVWF      PORTC
0x0050	0x300B      	MOVLW      11
0x0051	0x00FB      	MOVWF      R11
0x0052	0x3026      	MOVLW      38
0x0053	0x00FC      	MOVWF      R12
0x0054	0x305D      	MOVLW      93
0x0055	0x00FD      	MOVWF      R13
L_interrupt7:
0x0056	0x0BFD      	DECFSZ     R13, 1
0x0057	0x2856      	GOTO       L_interrupt7
0x0058	0x0BFC      	DECFSZ     R12, 1
0x0059	0x2856      	GOTO       L_interrupt7
0x005A	0x0BFB      	DECFSZ     R11, 1
0x005B	0x2856      	GOTO       L_interrupt7
0x005C	0x0000      	NOP
0x005D	0x0000      	NOP
;traffic_light.c,36 :: 		portC = (0<<4) |(0&0x0f);      Delay_ms(1000);
0x005E	0x0187      	CLRF       PORTC
0x005F	0x300B      	MOVLW      11
0x0060	0x00FB      	MOVWF      R11
0x0061	0x3026      	MOVLW      38
0x0062	0x00FC      	MOVWF      R12
0x0063	0x305D      	MOVLW      93
0x0064	0x00FD      	MOVWF      R13
L_interrupt8:
0x0065	0x0BFD      	DECFSZ     R13, 1
0x0066	0x2865      	GOTO       L_interrupt8
0x0067	0x0BFC      	DECFSZ     R12, 1
0x0068	0x2865      	GOTO       L_interrupt8
0x0069	0x0BFB      	DECFSZ     R11, 1
0x006A	0x2865      	GOTO       L_interrupt8
0x006B	0x0000      	NOP
0x006C	0x0000      	NOP
;traffic_light.c,37 :: 		s_red = toggle; w_green = toggle; s_green = ~toggle; w_red= ~toggle;
0x006D	0x183B      	BTFSC      _toggle, 0
0x006E	0x2871      	GOTO       L__interrupt30
0x006F	0x1008      	BCF        PORTD, 0
0x0070	0x2872      	GOTO       L__interrupt31
L__interrupt30:
0x0071	0x1408      	BSF        PORTD, 0
L__interrupt31:
0x0072	0x183B      	BTFSC      _toggle, 0
0x0073	0x2876      	GOTO       L__interrupt32
0x0074	0x1288      	BCF        PORTD, 5
0x0075	0x2877      	GOTO       L__interrupt33
L__interrupt32:
0x0076	0x1688      	BSF        PORTD, 5
L__interrupt33:
0x0077	0x093B      	COMF       _toggle, 0
0x0078	0x00F0      	MOVWF      R0
0x0079	0x1870      	BTFSC      R0, 0
0x007A	0x287D      	GOTO       L__interrupt34
0x007B	0x1108      	BCF        PORTD, 2
0x007C	0x287E      	GOTO       L__interrupt35
L__interrupt34:
0x007D	0x1508      	BSF        PORTD, 2
L__interrupt35:
0x007E	0x1870      	BTFSC      R0, 0
0x007F	0x2882      	GOTO       L__interrupt36
0x0080	0x1188      	BCF        PORTD, 3
0x0081	0x2883      	GOTO       L__interrupt37
L__interrupt36:
0x0082	0x1588      	BSF        PORTD, 3
L__interrupt37:
;traffic_light.c,38 :: 		s_yellow = 0; w_yellow = 0;
0x0083	0x1088      	BCF        PORTD, 1
0x0084	0x1208      	BCF        PORTD, 4
;traffic_light.c,39 :: 		toggle=~toggle;
0x0085	0x0870      	MOVF       R0, 0
0x0086	0x00BB      	MOVWF      _toggle
;traffic_light.c,41 :: 		}
L_interrupt4:
;traffic_light.c,42 :: 		}
0x0087	0x2821      	GOTO       L_interrupt1
L_interrupt2:
;traffic_light.c,44 :: 		}
L_end_interrupt:
L__interrupt29:
0x0088	0x0823      	MOVF       35, 0
0x0089	0x00F0      	MOVWF      R0
0x008A	0x0822      	MOVF       34, 0
0x008B	0x00FB      	MOVWF      R11
0x008C	0x0821      	MOVF       33, 0
0x008D	0x00FC      	MOVWF      R12
0x008E	0x0820      	MOVF       32, 0
0x008F	0x00FD      	MOVWF      R13
0x0090	0x0842      	MOVF       ___savePCLATH, 0
0x0091	0x008A      	MOVWF      PCLATH
0x0092	0x0E41      	SWAPF      ___saveSTATUS, 0
0x0093	0x0083      	MOVWF      STATUS
0x0094	0x0EFF      	SWAPF      R15, 1
0x0095	0x0E7F      	SWAPF      R15, 0
0x0096	0x0009      	RETFIE
; end of _interrupt
_Div_8X8_U:
;__Lib_Math.c,189 :: 		
;__Lib_Math.c,196 :: 		
0x0097	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,197 :: 		
0x0098	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,198 :: 		
0x0099	0x01F8      	CLRF       R8
;__Lib_Math.c,199 :: 		
0x009A	0x3008      	MOVLW      8
;__Lib_Math.c,200 :: 		
0x009B	0x00FC      	MOVWF      R12
;__Lib_Math.c,201 :: 		
0x009C	0x0D70      	RLF        R0, 0
;__Lib_Math.c,202 :: 		
0x009D	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,203 :: 		
0x009E	0x0874      	MOVF       R4, 0
;__Lib_Math.c,204 :: 		
0x009F	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,205 :: 		
0x00A0	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,206 :: 		
0x00A1	0x28A4      	GOTO       $+3
;__Lib_Math.c,207 :: 		
0x00A2	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,208 :: 		
0x00A3	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,209 :: 		
0x00A4	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,210 :: 		
0x00A5	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,211 :: 		
0x00A6	0x289C      	GOTO       $-10
;__Lib_Math.c,213 :: 		
L_end_Div_8X8_U:
0x00A7	0x0008      	RETURN
; end of _Div_8X8_U
_display:
;traffic_light.c,18 :: 		void display(char num) {
;traffic_light.c,19 :: 		units = num % 10;
0x00A8	0x300A      	MOVLW      10
0x00A9	0x1283      	BCF        STATUS, 5
0x00AA	0x1303      	BCF        STATUS, 6
0x00AB	0x00F4      	MOVWF      R4
0x00AC	0x0843      	MOVF       FARG_display_num, 0
0x00AD	0x00F0      	MOVWF      R0
0x00AE	0x2097      	CALL       _Div_8X8_U
0x00AF	0x0878      	MOVF       R8, 0
0x00B0	0x00F0      	MOVWF      R0
0x00B1	0x0870      	MOVF       R0, 0
0x00B2	0x00C4      	MOVWF      FLOC__display
0x00B3	0x0844      	MOVF       FLOC__display, 0
0x00B4	0x00BF      	MOVWF      _units
;traffic_light.c,20 :: 		tens = num / 10;
0x00B5	0x300A      	MOVLW      10
0x00B6	0x00F4      	MOVWF      R4
0x00B7	0x0843      	MOVF       FARG_display_num, 0
0x00B8	0x00F0      	MOVWF      R0
0x00B9	0x2097      	CALL       _Div_8X8_U
0x00BA	0x0870      	MOVF       R0, 0
0x00BB	0x00C0      	MOVWF      _tens
;traffic_light.c,21 :: 		portC = (units<<4) |(tens&0x0f); //to displaying units and tens on the same port
0x00BC	0x0844      	MOVF       FLOC__display, 0
0x00BD	0x00F1      	MOVWF      R1
0x00BE	0x0DF1      	RLF        R1, 1
0x00BF	0x1071      	BCF        R1, 0
0x00C0	0x0DF1      	RLF        R1, 1
0x00C1	0x1071      	BCF        R1, 0
0x00C2	0x0DF1      	RLF        R1, 1
0x00C3	0x1071      	BCF        R1, 0
0x00C4	0x0DF1      	RLF        R1, 1
0x00C5	0x1071      	BCF        R1, 0
0x00C6	0x300F      	MOVLW      15
0x00C7	0x05F0      	ANDWF      R0, 1
0x00C8	0x0870      	MOVF       R0, 0
0x00C9	0x0471      	IORWF      R1, 0
0x00CA	0x0087      	MOVWF      PORTC
;traffic_light.c,23 :: 		}
L_end_display:
0x00CB	0x0008      	RETURN
; end of _display
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x00CC	0x1283      	BCF        STATUS, 5
0x00CD	0x1303      	BCF        STATUS, 6
0x00CE	0x083E      	MOVF       ___DoICPAddr+1, 0
0x00CF	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x00D0	0x083D      	MOVF       ___DoICPAddr, 0
0x00D1	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x00D2	0x0008      	RETURN
; end of _____DoICP
_automatic:
;traffic_light.c,45 :: 		void automatic() {
;traffic_light.c,47 :: 		for (i = 0; i <14 ; i++) {
0x00D3	0x1283      	BCF        STATUS, 5
0x00D4	0x1303      	BCF        STATUS, 6
0x00D5	0x01BC      	CLRF       _i
L_automatic9:
0x00D6	0x300E      	MOVLW      14
0x00D7	0x023C      	SUBWF      _i, 0
0x00D8	0x1803      	BTFSC      STATUS, 0
0x00D9	0x290B      	GOTO       L_automatic10
;traffic_light.c,48 :: 		display(arr[i+8]);//to start count from 15
0x00DA	0x3008      	MOVLW      8
0x00DB	0x073C      	ADDWF      _i, 0
0x00DC	0x00F0      	MOVWF      R0
0x00DD	0x01F1      	CLRF       R0+1
0x00DE	0x1803      	BTFSC      STATUS, 0
0x00DF	0x0AF1      	INCF       R0+1, 1
0x00E0	0x0870      	MOVF       R0, 0
0x00E1	0x3E24      	ADDLW      _arr
0x00E2	0x0084      	MOVWF      FSR
0x00E3	0x0800      	MOVF       INDF, 0
0x00E4	0x00C3      	MOVWF      FARG_display_num
0x00E5	0x20A8      	CALL       _display
;traffic_light.c,49 :: 		if (i <11) {
0x00E6	0x300B      	MOVLW      11
0x00E7	0x023C      	SUBWF      _i, 0
0x00E8	0x1803      	BTFSC      STATUS, 0
0x00E9	0x28F1      	GOTO       L_automatic12
;traffic_light.c,50 :: 		s_red = 1; s_yellow = 0; s_green = 0; w_red = 0; w_yellow = 0; w_green = 1;  //red and green
0x00EA	0x1408      	BSF        PORTD, 0
0x00EB	0x1088      	BCF        PORTD, 1
0x00EC	0x1108      	BCF        PORTD, 2
0x00ED	0x1188      	BCF        PORTD, 3
0x00EE	0x1208      	BCF        PORTD, 4
0x00EF	0x1688      	BSF        PORTD, 5
;traffic_light.c,51 :: 		} else if (i>=11) {
0x00F0	0x28FB      	GOTO       L_automatic13
L_automatic12:
0x00F1	0x300B      	MOVLW      11
0x00F2	0x023C      	SUBWF      _i, 0
0x00F3	0x1C03      	BTFSS      STATUS, 0
0x00F4	0x28FB      	GOTO       L_automatic14
;traffic_light.c,52 :: 		s_red = 1; s_yellow = 0; s_green = 0; w_red  = 0; w_yellow = 1;  w_green= 0;
0x00F5	0x1408      	BSF        PORTD, 0
0x00F6	0x1088      	BCF        PORTD, 1
0x00F7	0x1108      	BCF        PORTD, 2
0x00F8	0x1188      	BCF        PORTD, 3
0x00F9	0x1608      	BSF        PORTD, 4
0x00FA	0x1288      	BCF        PORTD, 5
;traffic_light.c,53 :: 		}
L_automatic14:
L_automatic13:
;traffic_light.c,54 :: 		Delay_ms(1000);
0x00FB	0x300B      	MOVLW      11
0x00FC	0x00FB      	MOVWF      R11
0x00FD	0x3026      	MOVLW      38
0x00FE	0x00FC      	MOVWF      R12
0x00FF	0x305D      	MOVLW      93
0x0100	0x00FD      	MOVWF      R13
L_automatic15:
0x0101	0x0BFD      	DECFSZ     R13, 1
0x0102	0x2901      	GOTO       L_automatic15
0x0103	0x0BFC      	DECFSZ     R12, 1
0x0104	0x2901      	GOTO       L_automatic15
0x0105	0x0BFB      	DECFSZ     R11, 1
0x0106	0x2901      	GOTO       L_automatic15
0x0107	0x0000      	NOP
0x0108	0x0000      	NOP
;traffic_light.c,47 :: 		for (i = 0; i <14 ; i++) {
0x0109	0x0ABC      	INCF       _i, 1
;traffic_light.c,56 :: 		}
0x010A	0x28D6      	GOTO       L_automatic9
L_automatic10:
;traffic_light.c,58 :: 		display(0);  Delay_ms(1000);  //there is some delaying when displaying zero in for loop
0x010B	0x01C3      	CLRF       FARG_display_num
0x010C	0x20A8      	CALL       _display
0x010D	0x300B      	MOVLW      11
0x010E	0x00FB      	MOVWF      R11
0x010F	0x3026      	MOVLW      38
0x0110	0x00FC      	MOVWF      R12
0x0111	0x305D      	MOVLW      93
0x0112	0x00FD      	MOVWF      R13
L_automatic16:
0x0113	0x0BFD      	DECFSZ     R13, 1
0x0114	0x2913      	GOTO       L_automatic16
0x0115	0x0BFC      	DECFSZ     R12, 1
0x0116	0x2913      	GOTO       L_automatic16
0x0117	0x0BFB      	DECFSZ     R11, 1
0x0118	0x2913      	GOTO       L_automatic16
0x0119	0x0000      	NOP
0x011A	0x0000      	NOP
;traffic_light.c,61 :: 		for (i = 0; i <22; i++) {
0x011B	0x01BC      	CLRF       _i
L_automatic17:
0x011C	0x3016      	MOVLW      22
0x011D	0x023C      	SUBWF      _i, 0
0x011E	0x1803      	BTFSC      STATUS, 0
0x011F	0x294B      	GOTO       L_automatic18
;traffic_light.c,62 :: 		display(arr[i]);
0x0120	0x083C      	MOVF       _i, 0
0x0121	0x3E24      	ADDLW      _arr
0x0122	0x0084      	MOVWF      FSR
0x0123	0x0800      	MOVF       INDF, 0
0x0124	0x00C3      	MOVWF      FARG_display_num
0x0125	0x20A8      	CALL       _display
;traffic_light.c,63 :: 		if (i<19) {
0x0126	0x3013      	MOVLW      19
0x0127	0x023C      	SUBWF      _i, 0
0x0128	0x1803      	BTFSC      STATUS, 0
0x0129	0x2931      	GOTO       L_automatic20
;traffic_light.c,64 :: 		s_red = 0; s_yellow = 0; s_green = 1; w_red = 1; w_yellow = 0; w_green = 0;
0x012A	0x1008      	BCF        PORTD, 0
0x012B	0x1088      	BCF        PORTD, 1
0x012C	0x1508      	BSF        PORTD, 2
0x012D	0x1588      	BSF        PORTD, 3
0x012E	0x1208      	BCF        PORTD, 4
0x012F	0x1288      	BCF        PORTD, 5
;traffic_light.c,65 :: 		} else if(i>=19) {
0x0130	0x293B      	GOTO       L_automatic21
L_automatic20:
0x0131	0x3013      	MOVLW      19
0x0132	0x023C      	SUBWF      _i, 0
0x0133	0x1C03      	BTFSS      STATUS, 0
0x0134	0x293B      	GOTO       L_automatic22
;traffic_light.c,66 :: 		s_red= 0; s_yellow = 1; s_green = 0;w_red = 1; w_yellow= 0; w_green = 0;
0x0135	0x1008      	BCF        PORTD, 0
0x0136	0x1488      	BSF        PORTD, 1
0x0137	0x1108      	BCF        PORTD, 2
0x0138	0x1588      	BSF        PORTD, 3
0x0139	0x1208      	BCF        PORTD, 4
0x013A	0x1288      	BCF        PORTD, 5
;traffic_light.c,67 :: 		}
L_automatic22:
L_automatic21:
;traffic_light.c,68 :: 		Delay_ms(1000);
0x013B	0x300B      	MOVLW      11
0x013C	0x00FB      	MOVWF      R11
0x013D	0x3026      	MOVLW      38
0x013E	0x00FC      	MOVWF      R12
0x013F	0x305D      	MOVLW      93
0x0140	0x00FD      	MOVWF      R13
L_automatic23:
0x0141	0x0BFD      	DECFSZ     R13, 1
0x0142	0x2941      	GOTO       L_automatic23
0x0143	0x0BFC      	DECFSZ     R12, 1
0x0144	0x2941      	GOTO       L_automatic23
0x0145	0x0BFB      	DECFSZ     R11, 1
0x0146	0x2941      	GOTO       L_automatic23
0x0147	0x0000      	NOP
0x0148	0x0000      	NOP
;traffic_light.c,61 :: 		for (i = 0; i <22; i++) {
0x0149	0x0ABC      	INCF       _i, 1
;traffic_light.c,70 :: 		}
0x014A	0x291C      	GOTO       L_automatic17
L_automatic18:
;traffic_light.c,71 :: 		display(0);  Delay_ms(1000);
0x014B	0x01C3      	CLRF       FARG_display_num
0x014C	0x20A8      	CALL       _display
0x014D	0x300B      	MOVLW      11
0x014E	0x00FB      	MOVWF      R11
0x014F	0x3026      	MOVLW      38
0x0150	0x00FC      	MOVWF      R12
0x0151	0x305D      	MOVLW      93
0x0152	0x00FD      	MOVWF      R13
L_automatic24:
0x0153	0x0BFD      	DECFSZ     R13, 1
0x0154	0x2953      	GOTO       L_automatic24
0x0155	0x0BFC      	DECFSZ     R12, 1
0x0156	0x2953      	GOTO       L_automatic24
0x0157	0x0BFB      	DECFSZ     R11, 1
0x0158	0x2953      	GOTO       L_automatic24
0x0159	0x0000      	NOP
0x015A	0x0000      	NOP
;traffic_light.c,72 :: 		}
L_end_automatic:
0x015B	0x0008      	RETURN
; end of _automatic
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x015C	0x20CC      	CALL       _____DoICP
0x015D	0x118A      	BCF        PCLATH, 3
0x015E	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x015F	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x0160	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x0161	0x0ABD      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x0162	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x0163	0x0ABE      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x0164	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x0165	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x0166	0x295C      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x0167	0x0008      	RETURN
; end of ___CC2DW
_main:
0x0168	0x3017      	MOVLW      23
0x0169	0x1283      	BCF        STATUS, 5
0x016A	0x1303      	BCF        STATUS, 6
0x016B	0x00A4      	MOVWF      _arr
0x016C	0x3016      	MOVLW      22
0x016D	0x00A5      	MOVWF      37
0x016E	0x3015      	MOVLW      21
0x016F	0x00A6      	MOVWF      38
0x0170	0x3014      	MOVLW      20
0x0171	0x00A7      	MOVWF      39
0x0172	0x3013      	MOVLW      19
0x0173	0x00A8      	MOVWF      40
0x0174	0x3012      	MOVLW      18
0x0175	0x00A9      	MOVWF      41
0x0176	0x3011      	MOVLW      17
0x0177	0x00AA      	MOVWF      42
0x0178	0x3010      	MOVLW      16
0x0179	0x00AB      	MOVWF      43
0x017A	0x300F      	MOVLW      15
0x017B	0x00AC      	MOVWF      44
0x017C	0x300E      	MOVLW      14
0x017D	0x00AD      	MOVWF      45
0x017E	0x300D      	MOVLW      13
0x017F	0x00AE      	MOVWF      46
0x0180	0x300C      	MOVLW      12
0x0181	0x00AF      	MOVWF      47
0x0182	0x300A      	MOVLW      10
0x0183	0x00B0      	MOVWF      48
0x0184	0x3009      	MOVLW      9
0x0185	0x00B1      	MOVWF      49
0x0186	0x3008      	MOVLW      8
0x0187	0x00B2      	MOVWF      50
0x0188	0x3007      	MOVLW      7
0x0189	0x00B3      	MOVWF      51
0x018A	0x3006      	MOVLW      6
0x018B	0x00B4      	MOVWF      52
0x018C	0x3005      	MOVLW      5
0x018D	0x00B5      	MOVWF      53
0x018E	0x3004      	MOVLW      4
0x018F	0x00B6      	MOVWF      54
0x0190	0x3003      	MOVLW      3
0x0191	0x00B7      	MOVWF      55
0x0192	0x3002      	MOVLW      2
0x0193	0x00B8      	MOVWF      56
0x0194	0x3001      	MOVLW      1
0x0195	0x00B9      	MOVWF      57
0x0196	0x01BA      	CLRF       58
0x0197	0x3001      	MOVLW      1
0x0198	0x00BB      	MOVWF      _toggle
;traffic_light.c,74 :: 		void main() {
;traffic_light.c,75 :: 		INTE_bit=1;
0x0199	0x160B      	BSF        INTE_bit, BitPos(INTE_bit+0)
;traffic_light.c,76 :: 		GIE_bit=1;
0x019A	0x178B      	BSF        GIE_bit, BitPos(GIE_bit+0)
;traffic_light.c,77 :: 		INTEDG_bit=1;
0x019B	0x1683      	BSF        STATUS, 5
0x019C	0x1701      	BSF        INTEDG_bit, BitPos(INTEDG_bit+0)
;traffic_light.c,78 :: 		NOT_RBPU_bit=1;
0x019D	0x1781      	BSF        NOT_RBPU_bit, BitPos(NOT_RBPU_bit+0)
;traffic_light.c,79 :: 		trisD=0x00;
0x019E	0x0188      	CLRF       TRISD
;traffic_light.c,80 :: 		trisB=0x03;
0x019F	0x3003      	MOVLW      3
0x01A0	0x0086      	MOVWF      TRISB
;traffic_light.c,81 :: 		trisC=0x00;
0x01A1	0x0187      	CLRF       TRISC
;traffic_light.c,83 :: 		sw1=1; sw2=1;sw3=1;sw4=1;
0x01A2	0x1283      	BCF        STATUS, 5
0x01A3	0x1606      	BSF        PORTB, 4
0x01A4	0x1686      	BSF        PORTB, 5
0x01A5	0x1706      	BSF        PORTB, 6
0x01A6	0x1786      	BSF        PORTB, 7
;traffic_light.c,84 :: 		while(1){
L_main25:
;traffic_light.c,85 :: 		automatic();
0x01A7	0x20D3      	CALL       _automatic
;traffic_light.c,86 :: 		}
0x01A8	0x29A7      	GOTO       L_main25
;traffic_light.c,87 :: 		}
L_end_main:
0x01A9	0x29A9      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004     [147]    _interrupt
0x0097      [17]    _Div_8X8_U
0x00A8      [36]    _display
0x00CC       [7]    _____DoICP
0x00D3     [137]    _automatic
0x015C      [12]    ___CC2DW
0x0168      [66]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0006       [1]    PORTB
0x0007       [1]    PORTC
0x0008       [1]    PORTD
0x000A       [1]    PCLATH
0x000B       [0]    INTE_bit
0x000B       [0]    INTF_bit
0x000B       [0]    GIE_bit
0x0024      [23]    _arr
0x003B       [1]    _toggle
0x003C       [1]    _i
0x003D       [2]    ___DoICPAddr
0x003F       [1]    _units
0x0040       [1]    _tens
0x0041       [1]    ___saveSTATUS
0x0042       [1]    ___savePCLATH
0x0043       [1]    FARG_display_num
0x0044       [1]    FLOC__display
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [0]    INTEDG_bit
0x0081       [0]    NOT_RBPU_bit
0x0086       [1]    TRISB
0x0087       [1]    TRISC
0x0088       [1]    TRISD
//** Label List: ** 
//----------------------------------------------
  L_interrupt0
  L_interrupt1
  L_interrupt2
  L_interrupt3
  L_interrupt4
  L_interrupt5
  L_interrupt6
  L_interrupt7
  L_interrupt8
  L_automatic9
  L_automatic10
  L_automatic11
  L_automatic12
  L_automatic13
  L_automatic14
  L_automatic15
  L_automatic16
  L_automatic17
  L_automatic18
  L_automatic19
  L_automatic20
  L_automatic21
  L_automatic22
  L_automatic23
  L_automatic24
  L_main25
  L_main26
  L_end_display
  _display
  L_end_interrupt
  _interrupt
  L__interrupt29
  L__interrupt30
  L__interrupt31
  L__interrupt32
  L__interrupt33
  L__interrupt34
  L__interrupt35
  L__interrupt36
  L__interrupt37
  L_end_automatic
  _automatic
  L_end_main
  _main
  L_Div_16x16_S0
  L_Div_16x16_S1
  LOOPS3232A
  SADD22LA
  SOK22LA
  SADD22L8
  SOK22L8
  LOOPS3232B
  SADD22LB
  SOK22LB
  SADD22L16
  SOK22L16
  LOOPS3232C
  SADD22LC
  SOK22LC
  SADD22L24
  SOK22L24
  LOOPS3232D
  SADD22LD
  SOK22LD
  SOK22L
  L_Div_32x32_S6
  L_Div_32x32_S7
  L_Div_32x32_S8
  L_Div_32x32_S9
  FXD3232S
  END_ALL
  CA3232S
  C3232SX
  C3232SX1
  C3232S
  C3232S2
  C3232SX4
  C3232SOK
  C3232SX3
  C3232SX2
  avoid_comfrem
  LOOPU3232A
  UADD22LA
  UOK22LA
  UADD22L8
  UOK22L8
  LOOPU3232B
  UADD22LB
  UOK22LB
  UADD22L16
  UOK22L16
  LOOPU3232C
  UADD22LC
  UOK22LC
  UADD22L24
  UOK22L24
  LOOPU3232D
  UADD22LD
  UOK22LD
  UOK22L
  _NEXT
  _EXIT2
  _LOOP
  _EXIT1
  _IF_FIRST
  _IF_SECOND
  _INVERCE_FIRST
  _MULT
  _INBERSE_SECOND
  _EXIT
  L_end_Mul_8X8_U
  _Mul_8X8_U
  L_end_Mul_16X16_U
  _Mul_16X16_U
  L_end_Div_8X8_U
  _Div_8X8_U
  L_end_Div_16X16_U
  _Div_16X16_U
  L_end_Mul_8X8_S
  _Mul_8X8_S
  L_end_Mul_16X16_S
  _Mul_16X16_S
  L_end_Div_16x16_S_L
  _Div_16x16_S_L
  L_end_Div_16x16_S
  _Div_16x16_S
  L_end_Div_8X8_S
  _Div_8X8_S
  L_end_SDIV3232L
  _SDIV3232L
  L_end_COMFREM
  _COMFREM
  L_end_Div_32x32_S
  _Div_32x32_S
  L_end_Div_32x32_U
  _Div_32x32_U
  L_end_Mul_32x32_U
  _Mul_32x32_U
  L_end_Mul_32x32_S
  _Mul_32x32_S
  L_loopCA2AWs
  L_CA2AWend
  _CCA2AW_Loop1
  L_loopCS2Ss
  L_CS2Send
  _CCS2S_Loop1
  L_CCS2Send
  L_loopFZinSWs
  L_FZinSend
  _CC2D_Loop1
  L_end_____DoICP
  _____DoICP
  L_end_____DoIFC
  _____DoIFC
  L_end___CA2AW
  ___CA2AW
  L_end___CCA2AW
  ___CCA2AW
  L_end___CS2S
  ___CS2S
  L_end___CCS2S
  ___CCS2S
  L_end___FZinS
  ___FZinS
  L_end___CC2DW
  ___CC2DW
  L_end_Swap
  _Swap
  L_interrupt0
  L_interrupt1
  L_interrupt2
  L_interrupt3
  L_interrupt4
  L_interrupt5
  L_interrupt6
  L_interrupt7
  L_interrupt8
  L_automatic9
  L_automatic10
  L_automatic11
  L_automatic12
  L_automatic13
  L_automatic14
  L_automatic15
  L_automatic16
  L_automatic17
  L_automatic18
  L_automatic19
  L_automatic20
  L_automatic21
  L_automatic22
  L_automatic23
  L_automatic24
  L_main25
  L_main26
  L_end_display
  _display
  L_end_interrupt
  _interrupt
  L__interrupt29
  L__interrupt30
  L__interrupt31
  L__interrupt32
  L__interrupt33
  L__interrupt34
  L__interrupt35
  L__interrupt36
  L__interrupt37
  L_end_automatic
  _automatic
  L_end_main
  _main
